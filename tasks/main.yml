---
# tasks file for ansible-install-mpd

- name: Set distro-specific variables | INCLUDE_VARS
  include_vars:
    file: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_release }}.yml"
    - "default.yml"
  tags:
    - ansible-install-mpd
    - packages
    - files
    - users

- name: Make group for Music Player Daemon user | GROUP
  group:
    name: "{{ ansible_install_mpd_user }}"
    state: present
  tags:
    - ansible-install-mpd
    - users

- name: Make user for Music Player Daemon | USER
  user:
    name: "{{ ansible_install_mpd_user }}"
    group: "{{ ansible_install_mpd_group }}"
    home: "{{ ansible_install_mpd_home }}"
    comment: "Music Player Daemon"
  tags:
    - ansible-install-mpd
    - users

- name: Create needed directories | FILE
  file:
    path: "{{ item }}"
    owner: "{{ ansible_install_mpd_user }}"
    group: "{{ ansible_install_mpd_group }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ ansible_install_mpd_src_base }}"
    - "{{ ansible_install_mpd_music_directory }}"
    - "{{ ansible_install_mpd_playlist_directory }}"
  tags:
    - ansible-install-mpd
    - files

- name: Install pre-requisites | APT
  apt:
    name: "{{ ansible_install_mpd_apt_prereqs }}"
    cache_valid_time: 3600
    state: present
  tags:
    - ansible-install-mpd
    - packages

- name: Download and extract tar package | UNARCHIVE
  unarchive:
    remote_src: yes
    dest: "{{ ansible_install_mpd_src_base }}"
    owner: "{{ ansible_install_mpd_user }}"
    group: "{{ ansible_install_mpd_group }}"
    src: "{{ ansible_install_mpd_url_base }}/{{ ansible_install_mpd_filename }}"
    creates: "{{ ansible_install_mpd_src }}"
  tags:
    - ansible-install-mpd
    - files

- name: Add ubuntu-toolchain-r/test PPA | APT_REPOSITORY
  apt_repository:
    repo: 'ppa:ubuntu-toolchain-r/test'
    update_cache: yes
  when: ansible_distribution == "Ubuntu"
  tags:
    - ansible-install-mpd
    - packages

- name: Install GCC/G++ | APT
  apt:
    name: "g++-{{ ansible_install_mpd_gcc_version }}"
    cache_valid_time: 3600
    state: present
  tags:
    - ansible-install-mpd
    - packages

- name: Create softlink for gcc | FILE
  file:
    path: /usr/bin/gcc
    src: "/usr/bin/gcc-{{ ansible_install_mpd_gcc_version }}"
    state: link
  tags:
    - ansible-install-mpd
    - files

- name: Create softlink for g++ | FILE
  file:
    path: /usr/bin/g++
    src: "/usr/bin/g++-{{ ansible_install_mpd_gcc_version }}"
    state: link
  tags:
    - ansible-install-mpd
    - files

- name: Use pip to install meson | PIP
  pip:
    name: meson
    executable: pip3
    state: present
  tags:
    - ansible-install-mpd
    - packages

- name: If needed, configure source before compiling | COMMAND
  command: "meson . output/release --buildtype=debugoptimized -Db_ndebug=true"
  args:
    chdir: "{{ ansible_install_mpd_src }}"
    creates: "{{ ansible_install_mpd_src }}/output/release/build.ninja"
  become_user: "{{ ansible_install_mpd_user }}"
  become: yes
  tags:
    - ansible-install-mpd
    - files

- name: If needed, compile the source | COMMAND
  command: "ninja -C output/release"
  args:
    chdir: "{{ ansible_install_mpd_src }}"
    creates: "{{ ansible_install_mpd_src }}/output/release/mpd"
  become_user: "{{ ansible_install_mpd_user }}"
  become: yes
  tags:
    - ansible-install-mpd
    - files

- name: If needed, install the compiled source | COMMAND
  command: "ninja -C output/release install"
  args:
    chdir: "{{ ansible_install_mpd_src }}"
    creates: "/usr/local/bin/mpd"
  tags:
    - ansible-install-mpd
    - files

- name: Generate MPD configuration file | TEMPLATE
  template:
    dest: "{{ ansible_install_mpd_conf }}"
    owner: "{{ ansible_install_mpd_user }}"
    group: "{{ ansible_install_mpd_group }}"
    mode: 0644
    src: "{{ ansible_install_mpd_conf_src }}"
  notify: Restart the Music Player Daemon service | SERVICE
  tags:
    - ansible-install-mpd
    - files

- name: Generate systemd service configuration file | TEMPLATE
  template:
    dest: "{{ ansible_install_mpd_systemd_service_dest }}"
    group: root
    owner: root
    mode: 0644
    src: "{{ ansible_install_mpd_systemd_service_src }}"
  when: ansible_service_mgr == "systemd"
  register: systemd_service_template_output
  notify: 
    - Validate systemd configuration files if new | COMMAND
    - Restart the Music Player Daemon service | SERVICE
  tags:
    - ansible-install-mpd
    - files

- name: Enable the Music Player Daemon service on next boot | COMMAND
  command: "systemctl enable mpd.service"
  args:
    creates: "/etc/systemd/system/multi-user.target.wants/mpd.service"
  tags:
    - ansible-install-mpd
    - services

- name: Touch some needed files | TOUCH
  file:
    path: "{{ item }}"
    owner: "{{ ansible_install_mpd_user }}"
    group: "{{ ansible_install_mpd_group }}"
    state: touch
    mode: 0755
  with_items:
    - "{{ ansible_install_mpd_db_file }}"
    - "{{ ansible_install_mpd_pid_file }}"
    - "{{ ansible_install_mpd_ratings_file }}"
    - "{{ ansible_install_mpd_state_file }}"
  changed_when: False
  tags:
    - ansible-install-mpd
    - files
